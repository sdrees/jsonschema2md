<% /**
 * Copyright 2017 Adobe Systems Incorporated. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 */ %>

#### <%=name %>

<% if (schema.title) { %>
##### <%= schema.title %>

<% } %>
    
<% if (schema.description) { %>
<%- (""+schema.description).replace(/\n/g, '\n\n') %>
<% } %>


`<%=name %>`


* <%=i18n.__('nestedPropertyIs')%> <% if (required) { %><%=i18n.__('nestedPropertyRequired')%><% } else { %><%=i18n.__('nestedPropertyOptinal')%><% } %>
* <%=i18n.__('nestedPropertyType')%> <%=schema.simpletype %><% if (schema.simpletype.match(/\[\]\[\]/)||schema.simpletype==="`array[]`") { %> <%=i18n.__('nestedPropertyTypeNestedArray')%><% } %><% if (schema.type==='array') { -%>
<%   if (schema.maxItems!==undefined&&schema.minItems!==undefined) { %>* <%=i18n.__('nestedPropertyItemsBetween')%> `<%=schema.minItems %>` <%=i18n.__('nestedPropertyItemsAnd')%> `<%=schema.maxItems %>` <%=i18n.__('nestedPropertyItemsBetweenEnd')%><% }
else if (schema.maxItems!==undefined                             ) { %>* <%=i18n.__('nestedPropertyItemsMax')%> `<%=schema.maxItems %>` <%=i18n.__('nestedPropertyItemsMaxEnd')%><% }
else if (schema.minItems!==undefined                             ) { %>* <%=i18n.__('nestedPropertyItemsMin')%> `<%=schema.minItems %>` <%=i18n.__('nestedPropertyItemsMinEnd')%><% } %>
<% } %><% if (schema.default!==undefined) { %>
* <%=i18n.__('nestedPropertySchemaDefault')%> `<%- JSON.stringify(schema.default) %>`
<% } %>

<% if (schema.const!==undefined) { %>
<%=i18n.__('nestedPropertySchemaConst')%>


```json
<%- JSON.stringify(schema.const, null, 2) %>
```

<% } else if (schema.enum!==undefined) { %>
<%=i18n.__('nestedPropertySchemaEnum',{enum:nameSlug})%>
<% } else { %>

##### <%=name %> <%=i18n.__('nestedPropertyHeaderType')%>

<% if (schema.type==="string") { %>
<%- include("string-type",{schema:schema,_:_,i18n:i18n}) %>
<% } else if (schema.type==="number"||schema.type==="integer") { %>
<%- include("number-type",{schema:schema,_:_,i18n:i18n}) %>
<% } else if (schema.type==="boolean") { %>
<%- include("boolean-type",{schema:schema,_:_,i18n:i18n}) %>
<% } else if (schema.type==="object") { %>
<%- include("object-type",{schema:schema,_:_,i18n:i18n})  %>
<% } else if (schema.type==="array") { %>
<%- include("array-type",{schema:schema,_:_,nested:false,ejs:ejs,i18n:i18n}) %>
<% } else if (schema.$ref!==undefined) { %>
<%- include("referenced-type",{schema:schema,_:_}) %>
<% } else if (schema.anyOf!==undefined || schema.allOf!==undefined || schema.oneOf!==undefined) { %>
<%- include("join-type",{schema:schema,_:_,schemas:schema.anyOf || schema.allOf || schema.oneOf,ejs:ejs,i18n:i18n}) %>
<% } else { %>
<%=i18n.__('nestedPropertyUnknownType')%> `<%= schema.type %>`.


```json
<%- JSON.stringify(schema, null, 2) %>
```

<% }} %>

<% if (schema.enum!==undefined||schema["meta:enum"]!==undefined) { %>
##### <%=name %> <%=i18n.__('nestedPropertyEnumKnownVaules')%>

| <%=i18n.__('nestedPropertyEnum.tabel.value')%> | <%=i18n.__('nestedPropertyEnum.tabel.description')%> |
|-------|-------------|
<%  _.forIn(schema["meta:enum"], (value, key, object) => { %>
| `<%= key %>` | <%= value %> |
<% }); %>

<% } %>


<% if (examples && examples.length == 1) { %>
##### <%=name %> <%=i18n.__('nestedPropertyExample')%>


```json
<%- examples[0] %>
```
<% } else if (examples && examples.length > 1) { %>
##### <%=name %> <%=i18n.__('nestedPropertyExamples')%>
<%  _.forEach(examples, example => { %>

```json
<%- example %>
```

<% }); %>
<% } %>

