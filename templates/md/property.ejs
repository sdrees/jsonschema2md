<% /**
 * Copyright 2017 Adobe Systems Incorporated. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 */ %>

## <%=name %>

<% if (schema.title) { %>
### <%= schema.title %>

<% } %>

<% if (schema.description) { %>
<%- schema.description.replace(/\n/g, '\n\n') %>
<% } %>

`<%=name %>`

* <%=i18n.__('propertyIs')%> <% if (required) { %> <%=i18n.__('propertyRequired')%><% } else { %><%=i18n.__('propertyOptional')%><% } %>
* <%=i18n.__('propertyType')%> <%=schema.simpletype %><% if (schema.simpletype.match(/\[\]\[\]/)||schema.simpletype==="`array[]`") { %> <%=i18n.__('propertyNestedArray')%><% } %>
<% if (schema.type==='array') { %><% if (schema.maxItems!==undefined&&schema.minItems!==undefined) { %>
* <%=i18n.__('propertyBetween')%> `<%=schema.minItems %>` <%=i18n.__('propertyBetweenAnd')%> `<%=schema.maxItems %>` <%=i18n.__('propertyBetweenItems')%>
<% } else if (schema.maxItems!==undefined) { %>
* <%=i18n.__('propertyBetweenMaxItemsPrefix')%> `<%=schema.maxItems %>` <%=i18n.__('propertyBetweenMaxItemsSuffix')%>
<% } else if (schema.minItems!==undefined) { %>
*  <%=i18n.__('propertyBetweenMinItemsPrefix')%> `<%=schema.minItems %>`  <%=i18n.__('propertyBetweenMinItemsSuffix')%><% } %>
<% } -%>
<% if (schema.default!==undefined) { %>
* <%=i18n.__('propertySchemaDefault')%>: `<%- JSON.stringify(schema.default) %>`
<% } -%>
* <%=i18n.__('propertySchemaDefinedIn')%> <% if (schema.$oSchema) { %>[<%= schema.$oSchema.$linkVal %>](<%= schema.$oSchema.$linkPath %>#<%= nameSlug %>)<% } else { %><%=i18n.__('propertySchemaDefinedSelf')%><% } %>

<% if (schema.const!==undefined) { %>
<%=i18n.__('propertySchemaConst')%>



```json
<%- JSON.stringify(schema.const, null, 2) %>
```

<% } else if (schema.enum!==undefined) { %>
<%=i18n.__('propertySchemaEnum',{enum:nameSlug})%>
<% } else { %>

### <%=name %> <%=i18n.__('propertyHeaderType')%>

<% if (schema.type==="string") { %>
<%- include("string-type",{schema:schema,_:_,i18n:i18n}) %>
<% } else if (schema.type==="number"||schema.type==="integer") { %>
<%- include("number-type",{schema:schema,_:_,i18n:i18n}) %>
<% } else if (schema.type==="null") { %>
<%- include("null-type",{schema:schema,_:_,i18n:i18n}) %>
<% } else if (schema.type==="boolean") { %>
<%- include("boolean-type",{schema:schema,_:_,i18n:i18n}) %>
<% } else if (schema.type==="object") { %>
<%- include("object-type",{schema:schema,_:_,nameSlug:nameSlug,i18n:i18n}) %>
<% } else if (schema.type==="array") { %>
<%- include("array-type",{schema:schema,_:_,nested:false,ejs:ejs,i18n:i18n}) %>
<% } else if (schema.$ref!==undefined) { %>
<%- include("referenced-type",{schema:schema,_:_,i18n:i18n}) %>
<% } else if (schema.anyOf!==undefined || schema.allOf!==undefined || schema.oneOf!==undefined) { %>
<%- include("join-type",{schema:schema,_:_,schemas:schema.anyOf || schema.allOf || schema.oneOf,ejs:ejs,i18n:i18n}) %>
<% } else if (schema.simpletype==="multiple") { %>
<%- include("multiple-type",{schema:schema,_:_,i18n:i18n}) %>
<% } else { %>
<%=i18n.__('propertyUnknownType')%> `<%= schema.type %>`.


```json
<%- JSON.stringify(schema, null, 2) %>
```

<% }} %>

<% if (schema.enum!==undefined||schema["meta:enum"]!==undefined) { %>
### <%=name %> <%=i18n.__('propertyEnumKnownVaules')%>

| <%=i18n.__('propertyEnum.tabel.value')%> | <%=i18n.__('propertyEnum.tabel.description')%> |
|-------|-------------|
<%  _.forIn(schema["meta:enum"], (value, key, object) => { %>
| `<%= key %>` | <%= value %> |
<% }); %>

<% } %>


<% if (examples && examples.length == 1) { %>
### <%=name %> <%=i18n.__('propertyExample')%>


```json
<%- examples[0] %>
```
<% } else if (examples && examples.length > 1) { %>
### <%=name %> <%=i18n.__('propertyExamples')%>
<%  _.forEach(examples, example => { %>

```json
<%- example %>
```

<% }); %>
<% } %>

